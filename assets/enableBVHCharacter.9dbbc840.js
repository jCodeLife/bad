import{c as U,aC as O,aD as V,l as k,aE as H,b as z,v as A,a as G,o as E,d as R,f as T,s as W,aF as _,i as j}from"./index.3bc64a20.js";import{g as P}from"./useBVHMap.56f01d8b.js";import{bvhManagerMap as F}from"./enableBVHMap.5736cbbf.js";const y=new Set,N=()=>new WeakSet;U(function(){const s=P();if(!s.length)return;const i=O(),b=V(),h=.02,w=k(()=>{H.clear();for(const t of y){const a=t.bvhVelocity,o=t.outerObject3d,m=t.bvhHalfHeight,n=t.bvhRadius;a.y+=t.bvhOnGround?0:h*-i;const{position:r}=t.physicsUpdate;t.physicsUpdate={},r&&(r.x&&(a.x=0),r.y&&(a.y=0),r.z&&(a.z=0)),o.position.addScaledVector(a,h),o.updateMatrixWorld();const{start:c,end:l}=G;l.copy(c.copy(o.position));const v=Math.max(m-n,0);l.y+=v,c.y-=v;const C=c.clone();z.setFromCenterAndSize(o.position,A.set(n*2,m*2,n*2));const g=R,M=T;let d=0,p,S=!1,f;for(const x of s)f=F.get(x),x.shapecast({intersectsBounds:u=>u.intersectsBox(z),intersectsTriangle:u=>{d=u.closestPointToSegment(G,g,M),d<n&&(S=!0,p=M.sub(g).normalize().multiplyScalar(n-d),c.add(p),l.add(p))}});S&&f&&E(H,t,N).add(f);const e=c.sub(C);t.bvhOnGround=e.y>Math.abs(h*a.y*.25),b&&t.bvhOnGround&&Math.abs(e.y/(e.x+e.z+Number.EPSILON))<b&&(t.bvhOnGround=!1);const B=Math.max(0,e.length()-1e-5);e.normalize().multiplyScalar(B),o.position.add(e),t.bvhOnGround?a.set(0,0,0):(e.normalize(),a.addScaledVector(e,-e.dot(a)))}});return()=>{w.cancel()}},[P,O,V]);function q(s){if(s.done)return;W.attach(this.outerObject3d),this.width=this.depth=Math.min(this.width,this.depth),this.physicsUpdate={};const i=_(this).multiplyScalar(.5);this.bvhHalfHeight=Math.max(i.y,.5),this.bvhRadius=Math.max(i.x,.5),this.bvhVelocity=new j,y.add(this),s.then(()=>{y.delete(this),this.physicsUpdate=void 0})}export{q as default};
